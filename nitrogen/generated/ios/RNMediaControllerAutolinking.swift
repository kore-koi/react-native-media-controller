///
/// RNMediaControllerAutolinking.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

public final class RNMediaControllerAutolinking {
  public typealias bridge = margelo.nitro.mediacontroller.bridge.swift

  /**
   * Creates an instance of a Swift class that implements `HybridMPVolumeViewControllerSpec`,
   * and wraps it in a Swift class that can directly interop with C++ (`HybridMPVolumeViewControllerSpecCxx`)
   *
   * This is generated by Nitrogen and will initialize the class specified
   * in the `"autolinking"` property of `nitro.json` (in this case, `HybridMPVolumeViewController`).
   */
  public static func createMPVolumeViewController() -> bridge.std__shared_ptr_margelo__nitro__mediacontroller__HybridMPVolumeViewControllerSpec_ {
    let hybridObject = HybridMPVolumeViewController()
    return { () -> bridge.std__shared_ptr_margelo__nitro__mediacontroller__HybridMPVolumeViewControllerSpec_ in
      let __cxxWrapped = HybridMPVolumeViewControllerSpecCxx(hybridObject)
      let __pointer = HybridMPVolumeViewControllerSpecCxxUnsafe.toUnsafe(__cxxWrapped)
      return bridge.create_std__shared_ptr_margelo__nitro__mediacontroller__HybridMPVolumeViewControllerSpec_(__pointer)
    }()
  }
}
